syntax = "proto3";

option go_package = "github.com/dehwyy/Makoto/backend/grpc/authGrpc";

package authGrpc;

// requests

message UserGetQuestionRequest {
  oneof UserData {
    string user_name = 1;
    string user_id = 2;
  }
}

message UserSubmitAnswerRequest {
  oneof UserData {
    string user_name = 1;
    string user_id = 2;
  }
  string answer = 3;
}

message UserSignUpRequest {
  string username = 1;
  string password = 2;
  string question = 3;
  string answer = 4;
}

message UserSignInRequest {
  string username = 1;
  string password = 2;
}

message UserChangePasswordRequest {
  string access_token = 1;
  string user_name = 2;
}

message AccessToken {
  string access_token = 1;
}

// responses

message UserQuestionResponse {
  string question = 1;
}

message UserResponse {
  string user_id = 1;
  string access_token = 2;
  string refresh_token = 3;
}

message Status {
  bool isOk = 1;
}

message ValidateAuthResponse {
  bool isOk = 1;
  string user_id = 2;
  string refresh_token = 3;
}

service User {
  // query
  rpc GetQuestion(UserGetQuestionRequest) returns (UserQuestionResponse);
  // mutation
  rpc SignUp(UserSignUpRequest) returns (UserResponse); // 1.
  rpc SignIn(UserSignInRequest) returns (UserResponse);
  rpc RecoverPasswordByQuestion(UserSubmitAnswerRequest) returns (UserResponse); // user would get the tokens and it's possible continue using same password as before
  rpc ChangePassword(UserChangePasswordRequest) returns (Status);
  // side request
  rpc ValidateAuth(AccessToken) returns (ValidateAuthResponse);
}
